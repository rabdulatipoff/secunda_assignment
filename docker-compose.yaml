services:
  db:
    image: "postgis/postgis:18-3.6"
    container_name: secunda_db
    env_file:
      - ./.env.docker
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  alembic:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secunda_alembic
    command: sh -c "./init-db.sh && alembic -c /app/alembic.ini upgrade head"
    env_file: .env
    environment:
      PYTHONPATH: /app
      PGPASSWORD: ${POSTGRES_PASSWORD}
      DB_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secunda_app
    ports:
      - "8000:8000"
    env_file: .env.docker
    environment:
      PYTHONPATH: /app
    depends_on:
      alembic:
        condition: service_completed_successfully
      db:
        condition: service_healthy

volumes:
  postgres_data:
